Grammar

    0 $accept: program END

    1 program: statement_list

    2 statement_list: statement_list statement
    3               | statement

    4 statement: statement_body STATEMENT_END

    5 statement_body: command_call

    6 command_call: IDENTIFIER command_args

    7 command_args: command_arg_list
    8             | %empty

    9 command_arg_list: command_arg_list command_arg
   10                 | command_arg

   11 command_arg: IDENTIFIER "=" expression
   12            | expression
   13            | IDENTIFIER

   14 expression: tuple_expression
   15           | NUMBER_LITERAL
   16           | BOOL_LITERAL
   17           | STRING_LITERAL

   18 tuple_expression: "(" tuple_value_list ")"

   19 tuple_value_list: expression "," tuple_value_list
   20                 | expression


Terminals, with rules where they appear

    END (0) 0
    error (256)
    IDENTIFIER <std::string> (258) 6 11 13
    STRING_LITERAL <std::string> (259) 17
    BOOL_LITERAL <bool> (260) 16
    NUMBER_LITERAL <shell::Number> (261) 15
    STATEMENT_END (262) 4
    "=" (263) 11
    "(" (264) 18
    ")" (265) 18
    "," (266) 19


Nonterminals, with rules where they appear

    $accept (12)
        on left: 0
    program (13)
        on left: 1
        on right: 0
    statement_list (14)
        on left: 2 3
        on right: 1 2
    statement (15)
        on left: 4
        on right: 2 3
    statement_body (16)
        on left: 5
        on right: 4
    command_call <shell::CommandCall> (17)
        on left: 6
        on right: 5
    command_args (18)
        on left: 7 8
        on right: 6
    command_arg_list (19)
        on left: 9 10
        on right: 7 9
    command_arg (20)
        on left: 11 12 13
        on right: 9 10
    expression <shell::Expression> (21)
        on left: 14 15 16 17
        on right: 11 12 19 20
    tuple_expression <shell::TupleExpression> (22)
        on left: 18
        on right: 14
    tuple_value_list <std::vector<shell::Expression>> (23)
        on left: 19 20
        on right: 18 19


State 0

    0 $accept: . program END
    1 program: . statement_list
    2 statement_list: . statement_list statement
    3               | . statement
    4 statement: . statement_body STATEMENT_END
    5 statement_body: . command_call
    6 command_call: . IDENTIFIER command_args

    IDENTIFIER  shift, and go to state 1

    program         go to state 2
    statement_list  go to state 3
    statement       go to state 4
    statement_body  go to state 5
    command_call    go to state 6


State 1

    6 command_call: IDENTIFIER . command_args
    7 command_args: . command_arg_list
    8             | . %empty  [STATEMENT_END]
    9 command_arg_list: . command_arg_list command_arg
   10                 | . command_arg
   11 command_arg: . IDENTIFIER "=" expression
   12            | . expression
   13            | . IDENTIFIER
   14 expression: . tuple_expression
   15           | . NUMBER_LITERAL
   16           | . BOOL_LITERAL
   17           | . STRING_LITERAL
   18 tuple_expression: . "(" tuple_value_list ")"

    IDENTIFIER      shift, and go to state 7
    STRING_LITERAL  shift, and go to state 8
    BOOL_LITERAL    shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 10
    "("             shift, and go to state 11

    $default  reduce using rule 8 (command_args)

    command_args      go to state 12
    command_arg_list  go to state 13
    command_arg       go to state 14
    expression        go to state 15
    tuple_expression  go to state 16


State 2

    0 $accept: program . END

    END  shift, and go to state 17


State 3

    1 program: statement_list .  [END]
    2 statement_list: statement_list . statement
    4 statement: . statement_body STATEMENT_END
    5 statement_body: . command_call
    6 command_call: . IDENTIFIER command_args

    IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    statement       go to state 18
    statement_body  go to state 5
    command_call    go to state 6


State 4

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


State 5

    4 statement: statement_body . STATEMENT_END

    STATEMENT_END  shift, and go to state 19


State 6

    5 statement_body: command_call .

    $default  reduce using rule 5 (statement_body)


State 7

   11 command_arg: IDENTIFIER . "=" expression
   13            | IDENTIFIER .  [IDENTIFIER, STRING_LITERAL, BOOL_LITERAL, NUMBER_LITERAL, STATEMENT_END, "("]

    "="  shift, and go to state 20

    $default  reduce using rule 13 (command_arg)


State 8

   17 expression: STRING_LITERAL .

    $default  reduce using rule 17 (expression)


State 9

   16 expression: BOOL_LITERAL .

    $default  reduce using rule 16 (expression)


State 10

   15 expression: NUMBER_LITERAL .

    $default  reduce using rule 15 (expression)


State 11

   14 expression: . tuple_expression
   15           | . NUMBER_LITERAL
   16           | . BOOL_LITERAL
   17           | . STRING_LITERAL
   18 tuple_expression: . "(" tuple_value_list ")"
   18                 | "(" . tuple_value_list ")"
   19 tuple_value_list: . expression "," tuple_value_list
   20                 | . expression

    STRING_LITERAL  shift, and go to state 8
    BOOL_LITERAL    shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 10
    "("             shift, and go to state 11

    expression        go to state 21
    tuple_expression  go to state 16
    tuple_value_list  go to state 22


State 12

    6 command_call: IDENTIFIER command_args .

    $default  reduce using rule 6 (command_call)


State 13

    7 command_args: command_arg_list .  [STATEMENT_END]
    9 command_arg_list: command_arg_list . command_arg
   11 command_arg: . IDENTIFIER "=" expression
   12            | . expression
   13            | . IDENTIFIER
   14 expression: . tuple_expression
   15           | . NUMBER_LITERAL
   16           | . BOOL_LITERAL
   17           | . STRING_LITERAL
   18 tuple_expression: . "(" tuple_value_list ")"

    IDENTIFIER      shift, and go to state 7
    STRING_LITERAL  shift, and go to state 8
    BOOL_LITERAL    shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 10
    "("             shift, and go to state 11

    $default  reduce using rule 7 (command_args)

    command_arg       go to state 23
    expression        go to state 15
    tuple_expression  go to state 16


State 14

   10 command_arg_list: command_arg .

    $default  reduce using rule 10 (command_arg_list)


State 15

   12 command_arg: expression .

    $default  reduce using rule 12 (command_arg)


State 16

   14 expression: tuple_expression .

    $default  reduce using rule 14 (expression)


State 17

    0 $accept: program END .

    $default  accept


State 18

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 19

    4 statement: statement_body STATEMENT_END .

    $default  reduce using rule 4 (statement)


State 20

   11 command_arg: IDENTIFIER "=" . expression
   14 expression: . tuple_expression
   15           | . NUMBER_LITERAL
   16           | . BOOL_LITERAL
   17           | . STRING_LITERAL
   18 tuple_expression: . "(" tuple_value_list ")"

    STRING_LITERAL  shift, and go to state 8
    BOOL_LITERAL    shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 10
    "("             shift, and go to state 11

    expression        go to state 24
    tuple_expression  go to state 16


State 21

   19 tuple_value_list: expression . "," tuple_value_list
   20                 | expression .  [")"]

    ","  shift, and go to state 25

    $default  reduce using rule 20 (tuple_value_list)


State 22

   18 tuple_expression: "(" tuple_value_list . ")"

    ")"  shift, and go to state 26


State 23

    9 command_arg_list: command_arg_list command_arg .

    $default  reduce using rule 9 (command_arg_list)


State 24

   11 command_arg: IDENTIFIER "=" expression .

    $default  reduce using rule 11 (command_arg)


State 25

   14 expression: . tuple_expression
   15           | . NUMBER_LITERAL
   16           | . BOOL_LITERAL
   17           | . STRING_LITERAL
   18 tuple_expression: . "(" tuple_value_list ")"
   19 tuple_value_list: . expression "," tuple_value_list
   19                 | expression "," . tuple_value_list
   20                 | . expression

    STRING_LITERAL  shift, and go to state 8
    BOOL_LITERAL    shift, and go to state 9
    NUMBER_LITERAL  shift, and go to state 10
    "("             shift, and go to state 11

    expression        go to state 21
    tuple_expression  go to state 16
    tuple_value_list  go to state 27


State 26

   18 tuple_expression: "(" tuple_value_list ")" .

    $default  reduce using rule 18 (tuple_expression)


State 27

   19 tuple_value_list: expression "," tuple_value_list .

    $default  reduce using rule 19 (tuple_value_list)
